define(writeFile |File write|)
define(readFile |File read|)
define(appendFile |File append|)

declare FileIO-Open {
    Argument name as arg0

    define(Content readFile(name))

    declare writeToFile {
        Argument contents as arg0
        writeFile(name contents)
        return 0
    }
    
    declare readFL {
        return readFile(name)
    }
    declare printContent {
        println(readFL())
    }
    declare appendFileContents {
        Argument contents as arg0
        appendFile(name contents)
    }

    Object file {
        name name
        content Content
        encoding "utf-8"
        defaultContet "..."
        write writeToFile
        read readFL
        printContent printContent
        append appendFileContents
    }

}

declare FileIO-Create { 
        Argument name as arg0

        writeFile(name "...")    
        define(Content readFile(name))

        declare writeToFile {
            Argument contents as arg0
            writeFile(name contents)
            return 0
        }
        declare readFL {
            return readFile(name)
        }
        declare printContent {
            println(readFL())
        }
        declare appendFileContents {
            Argument contents as arg0
            appendFile(name contents)
        }

        Object file {
            name name
            content Content
            encoding "utf-8"
            defaultContet "..."
            write writeToFile
            read readFL
            printContent printContent
            append appendFileContents
        }
    
    return file
}


