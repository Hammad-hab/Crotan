#!/usr/local/bin/node
const { tokenize } = require("../lexer");
const { parser } = require("../parser");
const { argv } = require("process");
const fs = require("fs");
const { Enviornment } = require("../std");

if (argv.length > 2) {
  const targetName = argv[2].split(".")[0] + ".occ";
  fs.readFile(argv[2], "utf-8", (err, buffer) => {
    const Tokens = tokenize(buffer);
    const Parse = parser(Tokens);
    const object = {
      __CMP_CONTENT: argv[3] && argv[3] === "-l" ? Tokens : Parse,
    };
    if (argv[3] === "-l") {
      console.warn(
        `Warning: low-priority optomisation will result in the generation of unparsed tokens that cannot be directly tampered with and have to be parsed before they can be executed by the Crotan interpreter. This will increase the interpeteration time slighty\n`
      );
      Enviornment.jsinput("Press enter to continue....")
    }
    try {
      fs.writeFile(targetName, JSON.stringify(object), (err) => {
        console.log(
          "Successfully optomised crotan file by converting into parsed object notation (PON)!"
        );
      });
    } catch (e) {
      console.log("Failed to optomise .cro file");
      console.log(`Please check if there are errors in ${argv[2]}`);
    }
  });
}
